{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/logo.jpg","path":"images/logo.jpg","modified":1,"renderable":0},{"_id":"themes/solar-theme-hexo/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/earth.png","path":"images/earth.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/mars.png","path":"images/mars.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/mercury.png","path":"images/mercury.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/shadow.png","path":"images/shadow.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/venus.png","path":"images/venus.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/jupiter.png","path":"images/jupiter.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/sun.png","path":"images/sun.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/justified-gallery/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/jquery.justifiedGallery.min.js","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/justified-gallery/justifiedGallery.min.css","path":"lib/justified-gallery/justifiedGallery.min.css","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/styles.css","path":"lib/meslo-LG/styles.css","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/images/Solar.png","path":"images/Solar.png","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Regular.ttf","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"495dc0d217dbc3e7cb0c015a4aa9af3e7011d37f","modified":1494149618000},{"_id":"themes/solar-theme-hexo/LICENSE","hash":"5ba0225e835bf8218d1524f481efc50c85447745","modified":1494170667000},{"_id":"themes/solar-theme-hexo/README.md","hash":"2ff73c09ebd6629da69d289f29849ab3047d948b","modified":1494170667000},{"_id":"themes/solar-theme-hexo/_config.yml","hash":"70c9752f7f158d8b85c67becbb47e783d9ade7de","modified":1494172021000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1494080486000},{"_id":"source/_posts/关于XMLHttpRequest.md","hash":"c89d8455efadf9b8346d670aa7854f295244b7df","modified":1494171286000},{"_id":"source/images/logo.jpg","hash":"63cfaf908e5a4a512a47ff6c7067c5db9f9c37dc","modified":1494170737000},{"_id":"themes/solar-theme-hexo/layout/archive.ejs","hash":"f9c0434f023bdf2858aa8447137463c3224814be","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/index.ejs","hash":"0ea23cf9f01820a7e1c86600110afa876041cd25","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout.ejs","hash":"52b18d33641395aa85c1f099380ffe79eb8dd3e1","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/page.ejs","hash":"b6b7b1e6dc856a0e62f35da0151f67ba41143e04","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/post.ejs","hash":"2731e597b5d1714a6f5a775c432e99785f02a3e3","modified":1494170667000},{"_id":"themes/solar-theme-hexo/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1494170667000},{"_id":"themes/solar-theme-hexo/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/banner.ejs","hash":"2611a9acb5392f425531610f5a12d396270041f7","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/comments.ejs","hash":"853a4500da515ef3facc51a055886eaf8efd080d","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/footer.ejs","hash":"7f6b3f126a58e6734b658ab57bc6b41822bc9342","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/head.ejs","hash":"5b6f73a4fb96edde3005f90063509bf851714f72","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/header.ejs","hash":"889fe54bbfd1fb3357e8c0614d57a437a72f782a","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/scripts.ejs","hash":"264e49c76744a2ce5be4cd69910cab8e0f517eda","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/archive.ejs","hash":"f9c0434f023bdf2858aa8447137463c3224814be","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/index.ejs","hash":"0ea23cf9f01820a7e1c86600110afa876041cd25","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/layout.ejs","hash":"52b18d33641395aa85c1f099380ffe79eb8dd3e1","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/page.ejs","hash":"b6b7b1e6dc856a0e62f35da0151f67ba41143e04","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/post.ejs","hash":"2731e597b5d1714a6f5a775c432e99785f02a3e3","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_extend.styl","hash":"2d360cc07d3cfe10fd95640346515f51fa0ea799","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_mixins.styl","hash":"c921ceb620deedddd38c9cec28190995e8764bab","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_util.styl","hash":"f8e286a21c7ec3e771d5ddeb2909ac92390af9bd","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_variables.styl","hash":"05dfdc680b2a156f615433a5978bf80178acb26f","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/style.styl","hash":"2b9c9697d30759cb3c49b52486b6fc34bcfbe464","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/apple-touch-icon.png","hash":"bb91acbedda435287809e41148b1b255cdf957dc","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/favicon-192x192.png","hash":"4b07282018db1888c7bc707a3e1b576c5684eabb","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/earth.png","hash":"2cdcc68e36457410c633a578bb7b30a803193ecb","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/logo.png","hash":"2084e1813f7310d9543a37608f4e6690d600b9c3","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/favicon.ico","hash":"54972e5dafeb73579b30c17232553c688d702448","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/mars.png","hash":"4b33fb4ef0359cb401d4ed6d862caf55fb560802","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/mercury.png","hash":"e5ecda952ae568b8890026c7ab02a175652535a2","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/shadow.png","hash":"ec5cfff7997edd1b5e01516604daca7c7a4f3788","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/venus.png","hash":"d45968836d952cd017439323135e6fad155c45ae","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/js/main.js","hash":"481f730da10e5c9e1d59dfa9f1c0714ae709a0b8","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_partial/archive.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/jupiter.png","hash":"4b7bc03b4cdf2fcde13e982aef340a1d385a3e7d","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/sun.png","hash":"62be3d54471271a1e8adb348a3f021ef001b4668","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/post/actions_desktop.ejs","hash":"b3ab56ec0b9a320cce49b239b2d3e8a86f61cb44","modified":1494172303000},{"_id":"themes/solar-theme-hexo/layout/_partial/post/actions_mobile.ejs","hash":"4541aa92414ae6afe6a02f6a9c392d219cdc29e0","modified":1494172250000},{"_id":"themes/solar-theme-hexo/layout/_partial/post/date.ejs","hash":"12a4a7ba6334e3e5c03d9a9601d7779a27c2e082","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/post/share.ejs","hash":"25a3406f97e976ec13239f0d3f32f9e512511f50","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/post/tag.ejs","hash":"bfab03ef986d35ccad583f2d2b575db4a8d2789e","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/banner.ejs","hash":"f4359350f4b79b14a9d669055911d50d7a3dfd89","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/comments.ejs","hash":"853a4500da515ef3facc51a055886eaf8efd080d","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/footer.ejs","hash":"7f6b3f126a58e6734b658ab57bc6b41822bc9342","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/head.ejs","hash":"5b6f73a4fb96edde3005f90063509bf851714f72","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/header.ejs","hash":"889fe54bbfd1fb3357e8c0614d57a437a72f782a","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/scripts.ejs","hash":"264e49c76744a2ce5be4cd69910cab8e0f517eda","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/kimbie.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/lightcode.styl","hash":"6c61c481836f6cbc3a57be10fa3af21bee83eb09","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/paraiso.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_partial/article.styl","hash":"7bd68ecc8ebeb70daa74bfc179f984032eef18ae","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_partial/comments.styl","hash":"11fb41241a13971d23fc3f7e6d60315c7f248396","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_partial/footer.styl","hash":"b7570de60eaf9aa6b0192bf9c71b9172ff11bfbc","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_partial/header.styl","hash":"1545e8303fe36bbabb4da4a967c424de07d93dec","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_partial/index.styl","hash":"cf43702450ea1e5617541501886982a394cff8ec","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_partial/solar.styl","hash":"3af61c9b8033a4b804f0e1ba52525b55d6e16126","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/styles.css","hash":"eb88d0b9f1bbef99070e9627e2c96d892036bf7e","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/images/Solar.png","hash":"463dbb952527b3d35c6203575eec552f62fd9d8e","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/jquery/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/post/actions_desktop.ejs","hash":"b3ab56ec0b9a320cce49b239b2d3e8a86f61cb44","modified":1494172288000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/post/actions_mobile.ejs","hash":"4541aa92414ae6afe6a02f6a9c392d219cdc29e0","modified":1494172242000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/post/date.ejs","hash":"12a4a7ba6334e3e5c03d9a9601d7779a27c2e082","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/post/share.ejs","hash":"25a3406f97e976ec13239f0d3f32f9e512511f50","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/post/tag.ejs","hash":"bfab03ef986d35ccad583f2d2b575db4a8d2789e","modified":1494170667000},{"_id":"themes/solar-theme-hexo/layout/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_partial/post/actions_desktop.styl","hash":"906679858f1d5d503a6001d96be830fb7c5b3ffa","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/css/_partial/post/actions_mobile.styl","hash":"9eb19c3063d300c9ca548d671770edc71e357eba","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","hash":"96c97a0a098ca40802f948ae56fa37aa6683d034","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","hash":"68700db02debd4b922304134da83b829cbfddfc9","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","hash":"7f7cdbdcc26279c04046632e22d872f111bc9399","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","hash":"a9a431fc7a6c3a67c98021d4035c12a07a4f1070","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","hash":"bfa1ed9a263ed78462f06d322de13bd5bd0906b2","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","hash":"2b912dd13f052f645ee19951604610bb350d50af","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","hash":"a8a8df3393bccc365335fc5eb0a62a6b7ccd32b9","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","hash":"65ddb11e75ee93909e845ab912a36717c48f1c94","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","hash":"5e220152adefe905b2197f873d7cee99eca50e91","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","hash":"df202ce09cbdc70bc16b81983a13ef0f94e46f10","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","hash":"d895a1bd25e36c58b7f463ebe14de09f186d5ab4","modified":1494170667000},{"_id":"themes/solar-theme-hexo/source/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","hash":"56fa0e33a390b704afc56af93a31576ccdbbdd9e","modified":1494170667000}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-05-06T08:43:45.000Z","updated":"2017-05-06T14:21:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2evu1b50000yptx7aa1ngr1","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"关于XMLHttpRequest","date":"2017-05-07T04:37:45.000Z","_content":"## XMLHttpRequest是什么\nXMLHttpRequest 是一个[API](https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest), 它为客户端提供了在客户端和服务器之间传输数据的功能。它提供了一个通过 URL 来获取数据的简单方式，并且不会使整个页面刷新。这使得网页只更新一部分页面而不会打扰到用户。XMLHttpRequest 在 [AJAX](https://developer.mozilla.org/zh-CN/docs/AJAX) 中被大量使用。\n\n## 兼容性\n![](https://lh2907883.github.io/store/blog/%E5%85%B3%E4%BA%8EXMLHttpRequest/1.png)\n* IE8/IE9也完全不支持xhr对象, 不过可以使用[ActiveXObject](https://msdn.microsoft.com/zh-cn/library/7sw4ddf8%28v=vs.94%29.aspx)类生成xhr实例\n```javascript\nnew window.ActiveXObject( \"Microsoft.XMLHTTP\" )\n```\n* IE10/IE11部分支持，不支持 xhr.responseType为json\n\n## 如何使用\n使用xhr给后台server发送请求,大概可以分下面几个步骤\n### 1.实例化XMLHttpRequest对象\n```javascript\nvar xhr = new XMLHttpRequest();\n```\n\n### 2.初始化一个请求\n```javascript\nxhr.open('POST', '/server', true);\n```\n``open(method, url [, async = true [, username = null [, password = null]]])``\n\nasync: 默认值为true，即为异步请求，若async=false，则为同步请求\n\n### 3.设置xhr参数\n#### 3.1 设置request header\n1. 通过调用setRequestHeader方法,设置请求头,这一步必须在``xhr.open``之后调用\n2. setRequestHeader可以调用多次，最终的值不会采用覆盖override的方式，而是采用追加append的方式\n```javascript\nxhr.setRequestHeader('X-Test', 'one');\nxhr.setRequestHeader('X-Test', 'two');\n// 最终request header中\"X-Test\"为: one, two\n```\n\n#### 3.2 设置response type\n1. 可以设置``xhr.responseType``,下面是responseType支持的类型\n\n| 值             | xhr.response 数据类型         |  说明                               |\n| ------        | -------                       |   ------                           |\n| \"\"            | String                        | 默认值(在不设置responseType时)        |\n| \"text\"        | String                        |                                    |\n| \"document\"    | [Document](https://developer.mozilla.org/zh-CN/docs/Web/API/Document) 对象                  | 希望返回 XML 格式数据时使用           |\n| \"json\"        | javascript 对象                | 存在兼容性问题，IE10/IE11不支持       |\n| \"blob\"        | [Blob](https://developer.mozilla.org/zh-CN/docs/Web/API/Blob)对象                       |                                    |\n| \"arrayBuffer\" | [ArrayBuffer](https://developer.mozilla.org/zh-CN/docs/Web/API/ArrayBuffer)对象                |                                    |\n客户端代码\n```javascript\nvar xhr = new XMLHttpRequest();\nxhr.open('GET', '/json');\nxhr.responseType = 'json';\nxhr.onreadystatechange = function(e) {\n    if (this.readyState == 4 && this.status == 200) {\n        //通过xhr.response可以拿到返回的json数据\n        console.log(this.response);\n    }\n};\nxhr.send();\n```\n服务端代码\n```javascript\nif (req.url == '/json') {\n    res.writeHead(200, { 'content-type': 'application/json' });\n    res.write('{\"a\": 123, \"b\": \"dcs\"}');\n    res.end();\n}\n```\n\n2. 通过调用``xhr.overrideMimeType``方法来重写response的content-type(不过这个方法我调用之后并没有起作用..)\n\n#### 3.3 设置请求超时\n可以设置``xhr.timeout``,来设置超时时间(单位毫秒),在xhr.send()方法调用后开始计时\n\n#### 3.4 设置xhr状态变化时的回调\n```javascript\nxhr.onreadystatechange = function () {\n    switch(xhr.readyState){\n        case 0://UNSENT,open()方法没有调用\n            break;\n        case 1://OPENED,open()方法已被成功调用,send()方法还未被调用。\n            break;\n        case 2://HEADERS_RECEIVED,send()方法已经被调用, 响应头和响应状态已经返回\n            break;\n        case 3://LOADING,响应体下载中,responseText中已经获取了部分数据.\n            break;\n        case 4://DONE,整个请求过程已经完毕.\n            break;\n    }\n}\n```\n#### 3.5 xhr的事件\n| 事件                | 触发条件                          |\n| -----              | -------                          |\n| onreadystatechange |\t每当xhr.readyState改变时触发；但xhr.readyState由非0值变为0时不触发。 |\n| onloadstart\t     |  调用xhr.send()方法后立即触发，若xhr.send()未被调用则不会触发此事件。   |\n| onprogress         |\txhr.upload.onprogress在上传阶段(即xhr.send()之后，xhr.readystate=2之前)触发；xhr.onprogress在下载阶段（即xhr.readystate=3时）触发  |\n| onload             |\t当请求成功完成时触发，此时xhr.readystate=4   |\n| onloadend\t         |  当请求结束（包括请求成功和请求失败）时触发   |\n| onabort            |\t当调用xhr.abort()后触发   |\n| ontimeout          |\txhr.timeout不等于0，由请求开始即onloadstart开始算起，当到达xhr.timeout所设置时间请求还未结束即onloadend，则触发此事件。   |\n| onerror            |\t在请求过程中，若发生Network error则会触发此事件（若发生Network error时，上传还没有结束，则会先触发xhr.upload.onerror，再触发xhr.onerror；若发生Network error时，上传已经结束，则只会触发xhr.onerror）。**注意**，只有发生了网络层级别的异常才会触发此事件，对于应用层级别的异常，如响应返回的xhr.statusCode是4xx时，并不属于Network error，所以不会触发onerror事件，而是会触发onload事件。    |\n\n### 4.发送数据\n```javascript\nxhr.send(data);\n```\n* 对于GET/HEAD请求``send``方法通常不传参数\n* 对于POST/DELETE/PUT请求,``xhr.send(data)``的参数data可以是以下几种类型：\n    * [ArrayBuffer](https://developer.mozilla.org/zh-CN/docs/Web/API/ArrayBuffer)\n    * [Blob](https://developer.mozilla.org/zh-CN/docs/Web/API/Blob)\n    * [Document](https://developer.mozilla.org/zh-CN/docs/Web/API/Document)\n    * DOMString\n    * [FormData](https://developer.mozilla.org/zh-CN/docs/Web/API/FormData)\n\n来一个🌰\n\n客户端代码\n```javascript\nvar fileInputElement = document.getElementById('file')\n\nvar oMyForm = new FormData();\n\noMyForm.append(\"username\", \"dcs\");\noMyForm.append(\"num\", 123456); // 数字123456被立即转换成字符串\"123456\"\n\n// fileInputElement中已经包含了用户所选择的文件\nfor (var i = 0; i < fileInputElement.files.length; i++) {\n    oMyForm.append(\"file\", fileInputElement.files[i]);\n}\n\nvar oFileBody = '<a id=\"a\"><b id=\"b\">hey!</b></a>'; // Blob对象包含的文件内容\nvar oBlob = new Blob([oFileBody], {\n    type: \"text/xml\"\n});\noMyForm.append(\"blob\", oBlob);\n\nvar xhr = new XMLHttpRequest();\nxhr.upload.onprogress = function(event) {\n    if (event.lengthComputable) {\n        var completedPercent = event.loaded / event.total;\n        console.log(completedPercent);\n    }\n}\nxhr.open(\"POST\", \"/upload\");\nxhr.send(oMyForm);\n```\n服务端代码\n```javascript\nif (req.url == '/upload' && req.method.toLowerCase() == 'post') {\n    req.on('data', function(buffer) {\n        //会不时的触发data事件来接受客户端传递的数据\n    })\n    .on('end', function() {\n        //数据传递完毕\n    });\n}\n```\n**注意**: 客户端的``xhr.upload.onprogress``表示的是上传进度触发的回调(进度取决于客户端的网络状况),参数``event.total``针对的是所有file的总大小, 而服务端的``req.on('data', function(){})``只是这次请求的数据流接受一定量的数据后触发的回调,两者之间没有直接关系\n\n## 参考资料\n* [你真的会使用XMLHttpRequest吗？](https://segmentfault.com/a/1190000004322487)\n* [MDN XMLHttpRequest](https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest)\n* [XMLHttpRequest2 新技巧](https://www.html5rocks.com/zh/tutorials/file/xhr2/)","source":"_posts/关于XMLHttpRequest.md","raw":"---\ntitle: 关于XMLHttpRequest\ndate: 2017-05-07 12:37:45\ntags: javascript\n---\n## XMLHttpRequest是什么\nXMLHttpRequest 是一个[API](https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest), 它为客户端提供了在客户端和服务器之间传输数据的功能。它提供了一个通过 URL 来获取数据的简单方式，并且不会使整个页面刷新。这使得网页只更新一部分页面而不会打扰到用户。XMLHttpRequest 在 [AJAX](https://developer.mozilla.org/zh-CN/docs/AJAX) 中被大量使用。\n\n## 兼容性\n![](https://lh2907883.github.io/store/blog/%E5%85%B3%E4%BA%8EXMLHttpRequest/1.png)\n* IE8/IE9也完全不支持xhr对象, 不过可以使用[ActiveXObject](https://msdn.microsoft.com/zh-cn/library/7sw4ddf8%28v=vs.94%29.aspx)类生成xhr实例\n```javascript\nnew window.ActiveXObject( \"Microsoft.XMLHTTP\" )\n```\n* IE10/IE11部分支持，不支持 xhr.responseType为json\n\n## 如何使用\n使用xhr给后台server发送请求,大概可以分下面几个步骤\n### 1.实例化XMLHttpRequest对象\n```javascript\nvar xhr = new XMLHttpRequest();\n```\n\n### 2.初始化一个请求\n```javascript\nxhr.open('POST', '/server', true);\n```\n``open(method, url [, async = true [, username = null [, password = null]]])``\n\nasync: 默认值为true，即为异步请求，若async=false，则为同步请求\n\n### 3.设置xhr参数\n#### 3.1 设置request header\n1. 通过调用setRequestHeader方法,设置请求头,这一步必须在``xhr.open``之后调用\n2. setRequestHeader可以调用多次，最终的值不会采用覆盖override的方式，而是采用追加append的方式\n```javascript\nxhr.setRequestHeader('X-Test', 'one');\nxhr.setRequestHeader('X-Test', 'two');\n// 最终request header中\"X-Test\"为: one, two\n```\n\n#### 3.2 设置response type\n1. 可以设置``xhr.responseType``,下面是responseType支持的类型\n\n| 值             | xhr.response 数据类型         |  说明                               |\n| ------        | -------                       |   ------                           |\n| \"\"            | String                        | 默认值(在不设置responseType时)        |\n| \"text\"        | String                        |                                    |\n| \"document\"    | [Document](https://developer.mozilla.org/zh-CN/docs/Web/API/Document) 对象                  | 希望返回 XML 格式数据时使用           |\n| \"json\"        | javascript 对象                | 存在兼容性问题，IE10/IE11不支持       |\n| \"blob\"        | [Blob](https://developer.mozilla.org/zh-CN/docs/Web/API/Blob)对象                       |                                    |\n| \"arrayBuffer\" | [ArrayBuffer](https://developer.mozilla.org/zh-CN/docs/Web/API/ArrayBuffer)对象                |                                    |\n客户端代码\n```javascript\nvar xhr = new XMLHttpRequest();\nxhr.open('GET', '/json');\nxhr.responseType = 'json';\nxhr.onreadystatechange = function(e) {\n    if (this.readyState == 4 && this.status == 200) {\n        //通过xhr.response可以拿到返回的json数据\n        console.log(this.response);\n    }\n};\nxhr.send();\n```\n服务端代码\n```javascript\nif (req.url == '/json') {\n    res.writeHead(200, { 'content-type': 'application/json' });\n    res.write('{\"a\": 123, \"b\": \"dcs\"}');\n    res.end();\n}\n```\n\n2. 通过调用``xhr.overrideMimeType``方法来重写response的content-type(不过这个方法我调用之后并没有起作用..)\n\n#### 3.3 设置请求超时\n可以设置``xhr.timeout``,来设置超时时间(单位毫秒),在xhr.send()方法调用后开始计时\n\n#### 3.4 设置xhr状态变化时的回调\n```javascript\nxhr.onreadystatechange = function () {\n    switch(xhr.readyState){\n        case 0://UNSENT,open()方法没有调用\n            break;\n        case 1://OPENED,open()方法已被成功调用,send()方法还未被调用。\n            break;\n        case 2://HEADERS_RECEIVED,send()方法已经被调用, 响应头和响应状态已经返回\n            break;\n        case 3://LOADING,响应体下载中,responseText中已经获取了部分数据.\n            break;\n        case 4://DONE,整个请求过程已经完毕.\n            break;\n    }\n}\n```\n#### 3.5 xhr的事件\n| 事件                | 触发条件                          |\n| -----              | -------                          |\n| onreadystatechange |\t每当xhr.readyState改变时触发；但xhr.readyState由非0值变为0时不触发。 |\n| onloadstart\t     |  调用xhr.send()方法后立即触发，若xhr.send()未被调用则不会触发此事件。   |\n| onprogress         |\txhr.upload.onprogress在上传阶段(即xhr.send()之后，xhr.readystate=2之前)触发；xhr.onprogress在下载阶段（即xhr.readystate=3时）触发  |\n| onload             |\t当请求成功完成时触发，此时xhr.readystate=4   |\n| onloadend\t         |  当请求结束（包括请求成功和请求失败）时触发   |\n| onabort            |\t当调用xhr.abort()后触发   |\n| ontimeout          |\txhr.timeout不等于0，由请求开始即onloadstart开始算起，当到达xhr.timeout所设置时间请求还未结束即onloadend，则触发此事件。   |\n| onerror            |\t在请求过程中，若发生Network error则会触发此事件（若发生Network error时，上传还没有结束，则会先触发xhr.upload.onerror，再触发xhr.onerror；若发生Network error时，上传已经结束，则只会触发xhr.onerror）。**注意**，只有发生了网络层级别的异常才会触发此事件，对于应用层级别的异常，如响应返回的xhr.statusCode是4xx时，并不属于Network error，所以不会触发onerror事件，而是会触发onload事件。    |\n\n### 4.发送数据\n```javascript\nxhr.send(data);\n```\n* 对于GET/HEAD请求``send``方法通常不传参数\n* 对于POST/DELETE/PUT请求,``xhr.send(data)``的参数data可以是以下几种类型：\n    * [ArrayBuffer](https://developer.mozilla.org/zh-CN/docs/Web/API/ArrayBuffer)\n    * [Blob](https://developer.mozilla.org/zh-CN/docs/Web/API/Blob)\n    * [Document](https://developer.mozilla.org/zh-CN/docs/Web/API/Document)\n    * DOMString\n    * [FormData](https://developer.mozilla.org/zh-CN/docs/Web/API/FormData)\n\n来一个🌰\n\n客户端代码\n```javascript\nvar fileInputElement = document.getElementById('file')\n\nvar oMyForm = new FormData();\n\noMyForm.append(\"username\", \"dcs\");\noMyForm.append(\"num\", 123456); // 数字123456被立即转换成字符串\"123456\"\n\n// fileInputElement中已经包含了用户所选择的文件\nfor (var i = 0; i < fileInputElement.files.length; i++) {\n    oMyForm.append(\"file\", fileInputElement.files[i]);\n}\n\nvar oFileBody = '<a id=\"a\"><b id=\"b\">hey!</b></a>'; // Blob对象包含的文件内容\nvar oBlob = new Blob([oFileBody], {\n    type: \"text/xml\"\n});\noMyForm.append(\"blob\", oBlob);\n\nvar xhr = new XMLHttpRequest();\nxhr.upload.onprogress = function(event) {\n    if (event.lengthComputable) {\n        var completedPercent = event.loaded / event.total;\n        console.log(completedPercent);\n    }\n}\nxhr.open(\"POST\", \"/upload\");\nxhr.send(oMyForm);\n```\n服务端代码\n```javascript\nif (req.url == '/upload' && req.method.toLowerCase() == 'post') {\n    req.on('data', function(buffer) {\n        //会不时的触发data事件来接受客户端传递的数据\n    })\n    .on('end', function() {\n        //数据传递完毕\n    });\n}\n```\n**注意**: 客户端的``xhr.upload.onprogress``表示的是上传进度触发的回调(进度取决于客户端的网络状况),参数``event.total``针对的是所有file的总大小, 而服务端的``req.on('data', function(){})``只是这次请求的数据流接受一定量的数据后触发的回调,两者之间没有直接关系\n\n## 参考资料\n* [你真的会使用XMLHttpRequest吗？](https://segmentfault.com/a/1190000004322487)\n* [MDN XMLHttpRequest](https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest)\n* [XMLHttpRequest2 新技巧](https://www.html5rocks.com/zh/tutorials/file/xhr2/)","slug":"关于XMLHttpRequest","published":1,"updated":"2017-05-07T15:34:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2evu1b90001yptxejlt38sf","content":"<h2 id=\"XMLHttpRequest是什么\"><a href=\"#XMLHttpRequest是什么\" class=\"headerlink\" title=\"XMLHttpRequest是什么\"></a>XMLHttpRequest是什么</h2><p>XMLHttpRequest 是一个<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\" target=\"_blank\" rel=\"external\">API</a>, 它为客户端提供了在客户端和服务器之间传输数据的功能。它提供了一个通过 URL 来获取数据的简单方式，并且不会使整个页面刷新。这使得网页只更新一部分页面而不会打扰到用户。XMLHttpRequest 在 <a href=\"https://developer.mozilla.org/zh-CN/docs/AJAX\" target=\"_blank\" rel=\"external\">AJAX</a> 中被大量使用。</p>\n<h2 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h2><p><img src=\"https://lh2907883.github.io/store/blog/%E5%85%B3%E4%BA%8EXMLHttpRequest/1.png\" alt=\"\"></p>\n<ul>\n<li><p>IE8/IE9也完全不支持xhr对象, 不过可以使用<a href=\"https://msdn.microsoft.com/zh-cn/library/7sw4ddf8%28v=vs.94%29.aspx\" target=\"_blank\" rel=\"external\">ActiveXObject</a>类生成xhr实例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">window</span>.ActiveXObject( <span class=\"string\">\"Microsoft.XMLHTTP\"</span> )</div></pre></td></tr></table></figure>\n</li>\n<li><p>IE10/IE11部分支持，不支持 xhr.responseType为json</p>\n</li>\n</ul>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>使用xhr给后台server发送请求,大概可以分下面几个步骤</p>\n<h3 id=\"1-实例化XMLHttpRequest对象\"><a href=\"#1-实例化XMLHttpRequest对象\" class=\"headerlink\" title=\"1.实例化XMLHttpRequest对象\"></a>1.实例化XMLHttpRequest对象</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</div></pre></td></tr></table></figure>\n<h3 id=\"2-初始化一个请求\"><a href=\"#2-初始化一个请求\" class=\"headerlink\" title=\"2.初始化一个请求\"></a>2.初始化一个请求</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xhr.open(<span class=\"string\">'POST'</span>, <span class=\"string\">'/server'</span>, <span class=\"literal\">true</span>);</div></pre></td></tr></table></figure>\n<p><code>open(method, url [, async = true [, username = null [, password = null]]])</code></p>\n<p>async: 默认值为true，即为异步请求，若async=false，则为同步请求</p>\n<h3 id=\"3-设置xhr参数\"><a href=\"#3-设置xhr参数\" class=\"headerlink\" title=\"3.设置xhr参数\"></a>3.设置xhr参数</h3><h4 id=\"3-1-设置request-header\"><a href=\"#3-1-设置request-header\" class=\"headerlink\" title=\"3.1 设置request header\"></a>3.1 设置request header</h4><ol>\n<li>通过调用setRequestHeader方法,设置请求头,这一步必须在<code>xhr.open</code>之后调用</li>\n<li>setRequestHeader可以调用多次，最终的值不会采用覆盖override的方式，而是采用追加append的方式<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">xhr.setRequestHeader(<span class=\"string\">'X-Test'</span>, <span class=\"string\">'one'</span>);</div><div class=\"line\">xhr.setRequestHeader(<span class=\"string\">'X-Test'</span>, <span class=\"string\">'two'</span>);</div><div class=\"line\"><span class=\"comment\">// 最终request header中\"X-Test\"为: one, two</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"3-2-设置response-type\"><a href=\"#3-2-设置response-type\" class=\"headerlink\" title=\"3.2 设置response type\"></a>3.2 设置response type</h4><ol>\n<li>可以设置<code>xhr.responseType</code>,下面是responseType支持的类型</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>xhr.response 数据类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>“”</td>\n<td>String</td>\n<td>默认值(在不设置responseType时)</td>\n</tr>\n<tr>\n<td>“text”</td>\n<td>String</td>\n<td></td>\n</tr>\n<tr>\n<td>“document”</td>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Document\" target=\"_blank\" rel=\"external\">Document</a> 对象</td>\n<td>希望返回 XML 格式数据时使用</td>\n</tr>\n<tr>\n<td>“json”</td>\n<td>javascript 对象</td>\n<td>存在兼容性问题，IE10/IE11不支持</td>\n</tr>\n<tr>\n<td>“blob”</td>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob\" target=\"_blank\" rel=\"external\">Blob</a>对象</td>\n<td></td>\n</tr>\n<tr>\n<td>“arrayBuffer”</td>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/ArrayBuffer\" target=\"_blank\" rel=\"external\">ArrayBuffer</a>对象</td>\n</tr>\n</tbody>\n</table>\n<p>客户端代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</div><div class=\"line\">xhr.open(<span class=\"string\">'GET'</span>, <span class=\"string\">'/json'</span>);</div><div class=\"line\">xhr.responseType = <span class=\"string\">'json'</span>;</div><div class=\"line\">xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.readyState == <span class=\"number\">4</span> &amp;&amp; <span class=\"keyword\">this</span>.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">//通过xhr.response可以拿到返回的json数据</span></div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.response);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">xhr.send();</div></pre></td></tr></table></figure></p>\n<p>服务端代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (req.url == <span class=\"string\">'/json'</span>) &#123;</div><div class=\"line\">    res.writeHead(<span class=\"number\">200</span>, &#123; <span class=\"string\">'content-type'</span>: <span class=\"string\">'application/json'</span> &#125;);</div><div class=\"line\">    res.write(<span class=\"string\">'&#123;\"a\": 123, \"b\": \"dcs\"&#125;'</span>);</div><div class=\"line\">    res.end();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<ol>\n<li>通过调用<code>xhr.overrideMimeType</code>方法来重写response的content-type(不过这个方法我调用之后并没有起作用..)</li>\n</ol>\n<h4 id=\"3-3-设置请求超时\"><a href=\"#3-3-设置请求超时\" class=\"headerlink\" title=\"3.3 设置请求超时\"></a>3.3 设置请求超时</h4><p>可以设置<code>xhr.timeout</code>,来设置超时时间(单位毫秒),在xhr.send()方法调用后开始计时</p>\n<h4 id=\"3-4-设置xhr状态变化时的回调\"><a href=\"#3-4-设置xhr状态变化时的回调\" class=\"headerlink\" title=\"3.4 设置xhr状态变化时的回调\"></a>3.4 设置xhr状态变化时的回调</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span>(xhr.readyState)&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>:<span class=\"comment\">//UNSENT,open()方法没有调用</span></div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:<span class=\"comment\">//OPENED,open()方法已被成功调用,send()方法还未被调用。</span></div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:<span class=\"comment\">//HEADERS_RECEIVED,send()方法已经被调用, 响应头和响应状态已经返回</span></div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:<span class=\"comment\">//LOADING,响应体下载中,responseText中已经获取了部分数据.</span></div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:<span class=\"comment\">//DONE,整个请求过程已经完毕.</span></div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"3-5-xhr的事件\"><a href=\"#3-5-xhr的事件\" class=\"headerlink\" title=\"3.5 xhr的事件\"></a>3.5 xhr的事件</h4><table>\n<thead>\n<tr>\n<th>事件</th>\n<th>触发条件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onreadystatechange</td>\n<td>每当xhr.readyState改变时触发；但xhr.readyState由非0值变为0时不触发。</td>\n</tr>\n<tr>\n<td>onloadstart</td>\n<td>调用xhr.send()方法后立即触发，若xhr.send()未被调用则不会触发此事件。</td>\n</tr>\n<tr>\n<td>onprogress</td>\n<td>xhr.upload.onprogress在上传阶段(即xhr.send()之后，xhr.readystate=2之前)触发；xhr.onprogress在下载阶段（即xhr.readystate=3时）触发</td>\n</tr>\n<tr>\n<td>onload</td>\n<td>当请求成功完成时触发，此时xhr.readystate=4</td>\n</tr>\n<tr>\n<td>onloadend</td>\n<td>当请求结束（包括请求成功和请求失败）时触发</td>\n</tr>\n<tr>\n<td>onabort</td>\n<td>当调用xhr.abort()后触发</td>\n</tr>\n<tr>\n<td>ontimeout</td>\n<td>xhr.timeout不等于0，由请求开始即onloadstart开始算起，当到达xhr.timeout所设置时间请求还未结束即onloadend，则触发此事件。</td>\n</tr>\n<tr>\n<td>onerror</td>\n<td>在请求过程中，若发生Network error则会触发此事件（若发生Network error时，上传还没有结束，则会先触发xhr.upload.onerror，再触发xhr.onerror；若发生Network error时，上传已经结束，则只会触发xhr.onerror）。<strong>注意</strong>，只有发生了网络层级别的异常才会触发此事件，对于应用层级别的异常，如响应返回的xhr.statusCode是4xx时，并不属于Network error，所以不会触发onerror事件，而是会触发onload事件。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"4-发送数据\"><a href=\"#4-发送数据\" class=\"headerlink\" title=\"4.发送数据\"></a>4.发送数据</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xhr.send(data);</div></pre></td></tr></table></figure>\n<ul>\n<li>对于GET/HEAD请求<code>send</code>方法通常不传参数</li>\n<li>对于POST/DELETE/PUT请求,<code>xhr.send(data)</code>的参数data可以是以下几种类型：<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/ArrayBuffer\" target=\"_blank\" rel=\"external\">ArrayBuffer</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob\" target=\"_blank\" rel=\"external\">Blob</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Document\" target=\"_blank\" rel=\"external\">Document</a></li>\n<li>DOMString</li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData\" target=\"_blank\" rel=\"external\">FormData</a></li>\n</ul>\n</li>\n</ul>\n<p>来一个🌰</p>\n<p>客户端代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fileInputElement = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> oMyForm = <span class=\"keyword\">new</span> FormData();</div><div class=\"line\"></div><div class=\"line\">oMyForm.append(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"dcs\"</span>);</div><div class=\"line\">oMyForm.append(<span class=\"string\">\"num\"</span>, <span class=\"number\">123456</span>); <span class=\"comment\">// 数字123456被立即转换成字符串\"123456\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// fileInputElement中已经包含了用户所选择的文件</span></div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; fileInputElement.files.length; i++) &#123;</div><div class=\"line\">    oMyForm.append(<span class=\"string\">\"file\"</span>, fileInputElement.files[i]);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> oFileBody = <span class=\"string\">'&lt;a id=\"a\"&gt;&lt;b id=\"b\"&gt;hey!&lt;/b&gt;&lt;/a&gt;'</span>; <span class=\"comment\">// Blob对象包含的文件内容</span></div><div class=\"line\"><span class=\"keyword\">var</span> oBlob = <span class=\"keyword\">new</span> Blob([oFileBody], &#123;</div><div class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">\"text/xml\"</span></div><div class=\"line\">&#125;);</div><div class=\"line\">oMyForm.append(<span class=\"string\">\"blob\"</span>, oBlob);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</div><div class=\"line\">xhr.upload.onprogress = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (event.lengthComputable) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> completedPercent = event.loaded / event.total;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(completedPercent);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">xhr.open(<span class=\"string\">\"POST\"</span>, <span class=\"string\">\"/upload\"</span>);</div><div class=\"line\">xhr.send(oMyForm);</div></pre></td></tr></table></figure></p>\n<p>服务端代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (req.url == <span class=\"string\">'/upload'</span> &amp;&amp; req.method.toLowerCase() == <span class=\"string\">'post'</span>) &#123;</div><div class=\"line\">    req.on(<span class=\"string\">'data'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">buffer</span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//会不时的触发data事件来接受客户端传递的数据</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">    .on(<span class=\"string\">'end'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//数据传递完毕</span></div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>: 客户端的<code>xhr.upload.onprogress</code>表示的是上传进度触发的回调(进度取决于客户端的网络状况),参数<code>event.total</code>针对的是所有file的总大小, 而服务端的<code>req.on(&#39;data&#39;, function(){})</code>只是这次请求的数据流接受一定量的数据后触发的回调,两者之间没有直接关系</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://segmentfault.com/a/1190000004322487\" target=\"_blank\" rel=\"external\">你真的会使用XMLHttpRequest吗？</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\" target=\"_blank\" rel=\"external\">MDN XMLHttpRequest</a></li>\n<li><a href=\"https://www.html5rocks.com/zh/tutorials/file/xhr2/\" target=\"_blank\" rel=\"external\">XMLHttpRequest2 新技巧</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"XMLHttpRequest是什么\"><a href=\"#XMLHttpRequest是什么\" class=\"headerlink\" title=\"XMLHttpRequest是什么\"></a>XMLHttpRequest是什么</h2><p>XMLHttpRequest 是一个<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\" target=\"_blank\" rel=\"external\">API</a>, 它为客户端提供了在客户端和服务器之间传输数据的功能。它提供了一个通过 URL 来获取数据的简单方式，并且不会使整个页面刷新。这使得网页只更新一部分页面而不会打扰到用户。XMLHttpRequest 在 <a href=\"https://developer.mozilla.org/zh-CN/docs/AJAX\" target=\"_blank\" rel=\"external\">AJAX</a> 中被大量使用。</p>\n<h2 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h2><p><img src=\"https://lh2907883.github.io/store/blog/%E5%85%B3%E4%BA%8EXMLHttpRequest/1.png\" alt=\"\"></p>\n<ul>\n<li><p>IE8/IE9也完全不支持xhr对象, 不过可以使用<a href=\"https://msdn.microsoft.com/zh-cn/library/7sw4ddf8%28v=vs.94%29.aspx\" target=\"_blank\" rel=\"external\">ActiveXObject</a>类生成xhr实例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">window</span>.ActiveXObject( <span class=\"string\">\"Microsoft.XMLHTTP\"</span> )</div></pre></td></tr></table></figure>\n</li>\n<li><p>IE10/IE11部分支持，不支持 xhr.responseType为json</p>\n</li>\n</ul>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>使用xhr给后台server发送请求,大概可以分下面几个步骤</p>\n<h3 id=\"1-实例化XMLHttpRequest对象\"><a href=\"#1-实例化XMLHttpRequest对象\" class=\"headerlink\" title=\"1.实例化XMLHttpRequest对象\"></a>1.实例化XMLHttpRequest对象</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</div></pre></td></tr></table></figure>\n<h3 id=\"2-初始化一个请求\"><a href=\"#2-初始化一个请求\" class=\"headerlink\" title=\"2.初始化一个请求\"></a>2.初始化一个请求</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xhr.open(<span class=\"string\">'POST'</span>, <span class=\"string\">'/server'</span>, <span class=\"literal\">true</span>);</div></pre></td></tr></table></figure>\n<p><code>open(method, url [, async = true [, username = null [, password = null]]])</code></p>\n<p>async: 默认值为true，即为异步请求，若async=false，则为同步请求</p>\n<h3 id=\"3-设置xhr参数\"><a href=\"#3-设置xhr参数\" class=\"headerlink\" title=\"3.设置xhr参数\"></a>3.设置xhr参数</h3><h4 id=\"3-1-设置request-header\"><a href=\"#3-1-设置request-header\" class=\"headerlink\" title=\"3.1 设置request header\"></a>3.1 设置request header</h4><ol>\n<li>通过调用setRequestHeader方法,设置请求头,这一步必须在<code>xhr.open</code>之后调用</li>\n<li>setRequestHeader可以调用多次，最终的值不会采用覆盖override的方式，而是采用追加append的方式<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">xhr.setRequestHeader(<span class=\"string\">'X-Test'</span>, <span class=\"string\">'one'</span>);</div><div class=\"line\">xhr.setRequestHeader(<span class=\"string\">'X-Test'</span>, <span class=\"string\">'two'</span>);</div><div class=\"line\"><span class=\"comment\">// 最终request header中\"X-Test\"为: one, two</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"3-2-设置response-type\"><a href=\"#3-2-设置response-type\" class=\"headerlink\" title=\"3.2 设置response type\"></a>3.2 设置response type</h4><ol>\n<li>可以设置<code>xhr.responseType</code>,下面是responseType支持的类型</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>xhr.response 数据类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>“”</td>\n<td>String</td>\n<td>默认值(在不设置responseType时)</td>\n</tr>\n<tr>\n<td>“text”</td>\n<td>String</td>\n<td></td>\n</tr>\n<tr>\n<td>“document”</td>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Document\" target=\"_blank\" rel=\"external\">Document</a> 对象</td>\n<td>希望返回 XML 格式数据时使用</td>\n</tr>\n<tr>\n<td>“json”</td>\n<td>javascript 对象</td>\n<td>存在兼容性问题，IE10/IE11不支持</td>\n</tr>\n<tr>\n<td>“blob”</td>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob\" target=\"_blank\" rel=\"external\">Blob</a>对象</td>\n<td></td>\n</tr>\n<tr>\n<td>“arrayBuffer”</td>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/ArrayBuffer\" target=\"_blank\" rel=\"external\">ArrayBuffer</a>对象</td>\n</tr>\n</tbody>\n</table>\n<p>客户端代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</div><div class=\"line\">xhr.open(<span class=\"string\">'GET'</span>, <span class=\"string\">'/json'</span>);</div><div class=\"line\">xhr.responseType = <span class=\"string\">'json'</span>;</div><div class=\"line\">xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.readyState == <span class=\"number\">4</span> &amp;&amp; <span class=\"keyword\">this</span>.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">//通过xhr.response可以拿到返回的json数据</span></div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.response);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">xhr.send();</div></pre></td></tr></table></figure></p>\n<p>服务端代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (req.url == <span class=\"string\">'/json'</span>) &#123;</div><div class=\"line\">    res.writeHead(<span class=\"number\">200</span>, &#123; <span class=\"string\">'content-type'</span>: <span class=\"string\">'application/json'</span> &#125;);</div><div class=\"line\">    res.write(<span class=\"string\">'&#123;\"a\": 123, \"b\": \"dcs\"&#125;'</span>);</div><div class=\"line\">    res.end();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<ol>\n<li>通过调用<code>xhr.overrideMimeType</code>方法来重写response的content-type(不过这个方法我调用之后并没有起作用..)</li>\n</ol>\n<h4 id=\"3-3-设置请求超时\"><a href=\"#3-3-设置请求超时\" class=\"headerlink\" title=\"3.3 设置请求超时\"></a>3.3 设置请求超时</h4><p>可以设置<code>xhr.timeout</code>,来设置超时时间(单位毫秒),在xhr.send()方法调用后开始计时</p>\n<h4 id=\"3-4-设置xhr状态变化时的回调\"><a href=\"#3-4-设置xhr状态变化时的回调\" class=\"headerlink\" title=\"3.4 设置xhr状态变化时的回调\"></a>3.4 设置xhr状态变化时的回调</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span>(xhr.readyState)&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>:<span class=\"comment\">//UNSENT,open()方法没有调用</span></div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:<span class=\"comment\">//OPENED,open()方法已被成功调用,send()方法还未被调用。</span></div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:<span class=\"comment\">//HEADERS_RECEIVED,send()方法已经被调用, 响应头和响应状态已经返回</span></div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:<span class=\"comment\">//LOADING,响应体下载中,responseText中已经获取了部分数据.</span></div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:<span class=\"comment\">//DONE,整个请求过程已经完毕.</span></div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"3-5-xhr的事件\"><a href=\"#3-5-xhr的事件\" class=\"headerlink\" title=\"3.5 xhr的事件\"></a>3.5 xhr的事件</h4><table>\n<thead>\n<tr>\n<th>事件</th>\n<th>触发条件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onreadystatechange</td>\n<td>每当xhr.readyState改变时触发；但xhr.readyState由非0值变为0时不触发。</td>\n</tr>\n<tr>\n<td>onloadstart</td>\n<td>调用xhr.send()方法后立即触发，若xhr.send()未被调用则不会触发此事件。</td>\n</tr>\n<tr>\n<td>onprogress</td>\n<td>xhr.upload.onprogress在上传阶段(即xhr.send()之后，xhr.readystate=2之前)触发；xhr.onprogress在下载阶段（即xhr.readystate=3时）触发</td>\n</tr>\n<tr>\n<td>onload</td>\n<td>当请求成功完成时触发，此时xhr.readystate=4</td>\n</tr>\n<tr>\n<td>onloadend</td>\n<td>当请求结束（包括请求成功和请求失败）时触发</td>\n</tr>\n<tr>\n<td>onabort</td>\n<td>当调用xhr.abort()后触发</td>\n</tr>\n<tr>\n<td>ontimeout</td>\n<td>xhr.timeout不等于0，由请求开始即onloadstart开始算起，当到达xhr.timeout所设置时间请求还未结束即onloadend，则触发此事件。</td>\n</tr>\n<tr>\n<td>onerror</td>\n<td>在请求过程中，若发生Network error则会触发此事件（若发生Network error时，上传还没有结束，则会先触发xhr.upload.onerror，再触发xhr.onerror；若发生Network error时，上传已经结束，则只会触发xhr.onerror）。<strong>注意</strong>，只有发生了网络层级别的异常才会触发此事件，对于应用层级别的异常，如响应返回的xhr.statusCode是4xx时，并不属于Network error，所以不会触发onerror事件，而是会触发onload事件。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"4-发送数据\"><a href=\"#4-发送数据\" class=\"headerlink\" title=\"4.发送数据\"></a>4.发送数据</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xhr.send(data);</div></pre></td></tr></table></figure>\n<ul>\n<li>对于GET/HEAD请求<code>send</code>方法通常不传参数</li>\n<li>对于POST/DELETE/PUT请求,<code>xhr.send(data)</code>的参数data可以是以下几种类型：<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/ArrayBuffer\" target=\"_blank\" rel=\"external\">ArrayBuffer</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob\" target=\"_blank\" rel=\"external\">Blob</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Document\" target=\"_blank\" rel=\"external\">Document</a></li>\n<li>DOMString</li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData\" target=\"_blank\" rel=\"external\">FormData</a></li>\n</ul>\n</li>\n</ul>\n<p>来一个🌰</p>\n<p>客户端代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fileInputElement = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> oMyForm = <span class=\"keyword\">new</span> FormData();</div><div class=\"line\"></div><div class=\"line\">oMyForm.append(<span class=\"string\">\"username\"</span>, <span class=\"string\">\"dcs\"</span>);</div><div class=\"line\">oMyForm.append(<span class=\"string\">\"num\"</span>, <span class=\"number\">123456</span>); <span class=\"comment\">// 数字123456被立即转换成字符串\"123456\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// fileInputElement中已经包含了用户所选择的文件</span></div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; fileInputElement.files.length; i++) &#123;</div><div class=\"line\">    oMyForm.append(<span class=\"string\">\"file\"</span>, fileInputElement.files[i]);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> oFileBody = <span class=\"string\">'&lt;a id=\"a\"&gt;&lt;b id=\"b\"&gt;hey!&lt;/b&gt;&lt;/a&gt;'</span>; <span class=\"comment\">// Blob对象包含的文件内容</span></div><div class=\"line\"><span class=\"keyword\">var</span> oBlob = <span class=\"keyword\">new</span> Blob([oFileBody], &#123;</div><div class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">\"text/xml\"</span></div><div class=\"line\">&#125;);</div><div class=\"line\">oMyForm.append(<span class=\"string\">\"blob\"</span>, oBlob);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</div><div class=\"line\">xhr.upload.onprogress = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (event.lengthComputable) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> completedPercent = event.loaded / event.total;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(completedPercent);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">xhr.open(<span class=\"string\">\"POST\"</span>, <span class=\"string\">\"/upload\"</span>);</div><div class=\"line\">xhr.send(oMyForm);</div></pre></td></tr></table></figure></p>\n<p>服务端代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (req.url == <span class=\"string\">'/upload'</span> &amp;&amp; req.method.toLowerCase() == <span class=\"string\">'post'</span>) &#123;</div><div class=\"line\">    req.on(<span class=\"string\">'data'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">buffer</span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//会不时的触发data事件来接受客户端传递的数据</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">    .on(<span class=\"string\">'end'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//数据传递完毕</span></div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>: 客户端的<code>xhr.upload.onprogress</code>表示的是上传进度触发的回调(进度取决于客户端的网络状况),参数<code>event.total</code>针对的是所有file的总大小, 而服务端的<code>req.on(&#39;data&#39;, function(){})</code>只是这次请求的数据流接受一定量的数据后触发的回调,两者之间没有直接关系</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://segmentfault.com/a/1190000004322487\" target=\"_blank\" rel=\"external\">你真的会使用XMLHttpRequest吗？</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\" target=\"_blank\" rel=\"external\">MDN XMLHttpRequest</a></li>\n<li><a href=\"https://www.html5rocks.com/zh/tutorials/file/xhr2/\" target=\"_blank\" rel=\"external\">XMLHttpRequest2 新技巧</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj2evu1b90001yptxejlt38sf","tag_id":"cj2evu1bc0002yptx5t2bw2vb","_id":"cj2evu1bf0003yptxb8m4xtx4"}],"Tag":[{"name":"javascript","_id":"cj2evu1bc0002yptx5t2bw2vb"}]}}